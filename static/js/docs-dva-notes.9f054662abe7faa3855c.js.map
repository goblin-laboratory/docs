{"version":3,"sources":["webpack:///./docs/dva/notes.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","className"],"mappings":"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","file":"static/js/docs-dva-notes.7f1ab4c3.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"dva-学习笔记\"}}>{`dva 学习笔记`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"ant-admin-登录页是如何从根路由的布局分离出来\"}}>{`ant-admin 登录页是如何从根路由的布局分离出来`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/zuiidea/antd-admin/issues/188\"}}>{`issues 188`}</MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`我现在是在utils/config.js写了这个openPages: `}{`['/login']`}{`,只要在openPages里的页面都会直接加载而不会加载布局`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// ./src/routes/app.js\nif (config.openPages && config.openPages.indexOf(location.pathname) > -1) {\n  return <div>{children}</div>\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// ./src/utils/config.js\nopenPages: ['/login'],\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"如何-abort-请求\"}}>{`如何 abort 请求`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`可能要通过 take 或者 takeEvery 来实现，暂时不投入确认。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"model-中定时轮询的实现与问题\"}}>{`model 中定时轮询的实现与问题`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`目前的实现方式是单独实现了一个管理状态的组建，接受相关参数进行轮寻。`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"更新：\"}}>{`更新：`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`通过 saga 的 fork 接口创建一个子任务，子任务中进行 for 循环，同时监听销毁资源的 effects，资源销毁时将 fork 的子任务取消掉。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://leonshi.com/redux-saga-in-chinese/docs/advanced/NonBlockingCalls.html\"}}>{`参考资料`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`示例代码：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// model.js\n// ...\nimport { service } from '../services';\n\nfunction* keepalive({ call, put }) {\n  while (true) {\n    // do something ...\n    yield call(delay, 1000 * 20);\n  }\n}\n\nexport default {\n\n  namespace: 'namespace',\n\n  state: {\n    data: null,\n    // state ...\n  },\n\n  subscriptions: {\n    // subscriptions ...\n  },\n\n  effects: {\n    *loginSucceed({ payload }, { put, fork, take, cancel, call }) {\n      const task = yield fork(keepalive, { put, call });\n      yield take(['logout', 'loginFaild']);\n      yield cancel(task);\n    },\n    *loginFaild({ payload }, { }) {\n      // do something ...\n    },\n    *logout({ payload }, { }) {\n      // do something ...\n    },\n  },\n\n  reducers: {\n    setData(state, action) {\n      return { ...state, data: action.payload };\n    },\n  },\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"多个异步-effects-时序控制问题\"}}>{`多个异步 effects 时序控制问题`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/dvajs/dva/issues/248\"}}>{`Issues 248`}</MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`两个方案：`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`通过 put action 去调? yield put({ type: 'auth' });，缺点是不会等待完成`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`auth 抽到 model 外，然后在 effect 里用 yiled * 去调他`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// model.js\n// ...\nimport { service } from '../services';\nfunction* doSomeThing({ call, put, select }){\n  // 等待 doAnotherThing 完成后继续处理\n  yield* doAnotherThing({ call, put, select });\n  // 一些异步部操作\n  const data = yield call(service.start);\n  yield put({ type: 'setData', payload: data });\n}\nfunction* doAnotherThing({ call, put, select }){\n  const { params } = yield select(state => state.namespace);\n  const data = yield call(service.stop, params);\n  yield put({ type: 'setData', payload: null });\n}\n\nexport default {\n\n  namespace: 'namespace',\n\n  state: {\n    data: null,\n    // state ...\n  },\n\n  subscriptions: {\n    // subscriptions ...\n  },\n\n  effects: {\n    *doSomeThing({ payload }, { call, put, select }){\n      yield call(doSomeThing, { call, put, select });\n    },\n  },\n\n  reducers: {\n    setData(state, action) {\n      return { ...state, data: action.payload };\n    },\n  },\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`dva@2.0 发布以后，dispatch 返回 Proimse，可以通过发起多个 action 的方式进行控制了`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/sorrycc/blog/issues/48\"}}>{`dva 2.0 发布`}</MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`dispatch(effectAction) => Proimse`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`为了方便在视图层 dispatch action 并处理回调，比如 #175，我们在 dispatch 里针对 effect 类型的 action 做了返回 Promise 的特殊处理。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"jwt-管理实现\"}}>{`jwt 管理实现`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// src/model/app.js\nimport { auth, delay } from '../utils';\n\nconst aliveInterval = 10 * 60 * 1000;\nfunction* keepalive({ call, put }) {\n  while (true) {\n    // 判断 jwt 是否需要更新\n    const timeLeft = auth.getJwtTimeLeft();\n    if (timeLeft < aliveInterval) {\n      const res = yield call(updateJwt, { call, put });\n      if (false === res) {\n        // jwt 更新失败\n        return yield put({ type: 'loginFaild' });\n      }\n    }\n    yield call(delay, aliveInterval);\n  }\n}\n\nconst updateJwt = async () => {\n  // 获取用户信息，用于更新jwt\n  const userInfo = getUserInfo();\n  const expired = auth.getUserLoginExpired();\n  // 发送 request 更新jwt\n  const response = await user.userLogin({ username: userInfo.username, password: userInfo.password, expired });\n  if (response.data) {\n    // 缓存jwt\n    saveJwt();\n    return true;\n  }\n  if (response.err) {\n    return false;\n  }\n};\n\nexport default {\n  namespace: 'app',\n  state:  { /* ... */ },\n  subscriptions: { /* ... */ },\n  effects: {\n    // ...\n    *loginSucceed({ payload }, { put, fork, take, cancel, call }) {\n      const task = yield fork(keepalive, { put, call });\n      auth.setUpdateJwtHandle(updateJwt);\n      yield take(['logout', 'loginFaild']);\n      auth.setUpdateJwtHandle(null);\n      yield cancel(task);\n    },\n  },\n  reducers: { /* ... */ },\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// src/utils/auth.js\nlet updateJwtHandle = null;\nconst setUpdateJwtHandle = (handle) => {\n  updateJwtHandle = handle;\n};\n\nconst getEffectiveJwt = () => {\n  // debugger;\n  return new Promise((resolve, reject) => {\n    const error = new Error('Unauthorized');\n    error.response = { status: 401 };\n    const jwt = getJwt();\n    if (jwt) {\n      return resolve(jwt);\n    } else if (!updateJwtHandle) {\n      return reject(error);\n    }\n    // debugger;\n    updateJwtHandle().then(() => {\n      return resolve(getJwt());\n    }).catch(() => {\n      return reject(error);\n    });\n  });\n};\n\nexport default {\n  getEffectiveJwt,\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// src/utils/request.js\nimport fetch from 'dva/fetch';\nimport { getEffectiveJwt } from './auth';\n\nfunction request(resource, opts) {\n  // debugger;\n  return getEffectiveJwt().then((jwt) => {\n    return ajax(resource, opts, jwt);\n  }).catch(err => ({ err }));\n}\n\nfunction requestNotNecessaryJwt(resource, opts) {\n  return getEffectiveJwt().then((jwt) => {\n    return ajax(resource, opts, jwt);\n  }).catch(() => {\n    return ajax(resource, opts);\n  });\n}\n\nfunction requestWithoutJwt(resource, opts) {\n  return ajax(resource, opts);\n}\n\nfunction ajax(resource, opts, jwt) {\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n  if (jwt) {\n    headers.Authorization = \\`Bearer \\${jwt}\\`;\n  }\n  const options = Object.assign({}, {\n    method: 'GET',\n    mode: 'cors',\n    headers,\n  }, opts);\n\n  return fetch(resource, options)\n    .then(checkStatus)\n    .then(parseText)\n    .then(parseJSON)\n    .then(data => ({ data }))\n    .catch(err => ({ err }));\n}\n\nexport default {\n  request,\n  requestNotNecessaryJwt,\n  requestWithoutJwt,\n};\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}