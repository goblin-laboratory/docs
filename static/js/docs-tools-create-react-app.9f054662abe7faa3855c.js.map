{"version":3,"sources":["webpack:///./docs/tools/create-react-app.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","className"],"mappings":"46CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,uBAAvD,uBACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,GAC9BE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,6BAAoEN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,KAAKnB,MAAO,CAACoB,KAAO,iDAAxE,kDAEpEP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,kDAAvD,kDACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,qCAAvD,qCACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,4EAAvD,4EACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,gBAAjF,wYAe3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,gBAAjF","file":"static/js/docs-tools-create-react-app.534596db.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h3\" components={components} props={{\"id\":\"1-create-react-app\"}}>{`1. create-react-app`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`项目地址: `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/facebook/create-react-app\"}}>{`https://github.com/facebook/create-react-app`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-使用-react-app-rewired-配置\"}}>{`2. 使用 react-app-rewired 配置`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-支持多页面\"}}>{`3. 支持多页面`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-同时按需加载-ant-design-和-ant-design-pro\"}}>{`4. 同时按需加载 ant-design 和 ant-design-pro`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`    config = injectBabelPlugin(['import', { libraryName: 'antd', style: true }, 'ant'], config);\n    config = injectBabelPlugin(\n      [\n        'import',\n        {\n          libraryName: 'ant-design-pro',\n          libraryDirectory: 'lib',\n          style: true,\n          camel2DashComponentName: false,\n        },\n        'ant-design-pro',\n      ],\n      config,\n    );\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// config-overrides.js\n/* eslint-disable */\nconst paths = require('react-scripts/config/paths');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst { injectBabelPlugin } = require('react-app-rewired');\n// const rewireCssModules = require('react-app-rewire-css-modules');\n// const rewireLess = require('react-app-rewire-less');\nconst rewireLess = require('react-app-rewire-less-modules');\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\npaths.appIndexJs = paths.appSrc + '/pages/login.js';\npaths.appLoginJs = paths.appSrc + '/pages/login.js';\npaths.appAdminJs = paths.appSrc + '/pages/admin.js';\npaths.appAuthJs = paths.appSrc + '/pages/auth.js';\npaths.servedPath = './';\n\nconst replacePlugin = (plugins, nameMatcher, newPlugin) => {\n  const pluginIndex = plugins.findIndex(plugin => {\n    return plugin.constructor && plugin.constructor.name && nameMatcher(plugin.constructor.name);\n  });\n\n  if (-1 === pluginIndex) {\n    return plugins;\n  }\n\n  const nextPlugins = plugins\n    .slice(0, pluginIndex)\n    .concat(newPlugin)\n    .concat(plugins.slice(pluginIndex + 1));\n\n  return nextPlugins;\n};\n\nmodule.exports = {\n  webpack: (config, env) => {\n    config = injectBabelPlugin(['import', { libraryName: 'antd', style: true }, 'ant'], config);\n    config = injectBabelPlugin(\n      [\n        'import',\n        {\n          libraryName: 'ant-design-pro',\n          libraryDirectory: 'lib',\n          style: true,\n          camel2DashComponentName: false,\n        },\n        'ant-design-pro',\n      ],\n      config,\n    );\n    config = rewireLess.withLoaderOptions({\n      javascriptEnabled: true,\n      // modifyVars: { \"@primary-color\": \"#1DA57A\" },\n    })(config, env);\n\n    if ('development' === env) {\n      config.entry = {\n        index: [require.resolve('react-dev-utils/webpackHotDevClient'), paths.appIndexJs],\n        login: [require.resolve('react-dev-utils/webpackHotDevClient'), paths.appLoginJs],\n        admin: [require.resolve('react-dev-utils/webpackHotDevClient'), paths.appAdminJs],\n        auth: [require.resolve('react-dev-utils/webpackHotDevClient'), paths.appAuthJs],\n      };\n      config.output.filename = 'static/js/[name].bundle.js';\n\n      const indexHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        chunks: ['vendors', 'runtime~index', 'index'],\n        filename: 'index.html',\n      });\n      const loginHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        chunks: ['vendors', 'runtime~login', 'login'],\n        filename: 'login.html',\n      });\n      const adminHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        chunks: ['vendors', 'runtime~admin', 'admin'],\n        filename: 'admin.html',\n      });\n      const authHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        chunks: ['vendors', 'runtime~auth', 'auth'],\n        filename: 'auth.html',\n      });\n      config.plugins = replacePlugin(config.plugins, name => /HtmlWebpackPlugin/i.test(name), indexHtmlPlugin);\n      config.plugins.push(loginHtmlPlugin);\n      config.plugins.push(adminHtmlPlugin);\n      config.plugins.push(authHtmlPlugin);\n    } else {\n      config.entry = {\n        index: [paths.appIndexJs],\n        login: [paths.appLoginJs],\n        admin: [paths.appAdminJs],\n        auth: [paths.appAuthJs],\n      };\n      const indexHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        minify: {\n          removeComments: true,\n          collapseWhitespace: true,\n          removeRedundantAttributes: true,\n          useShortDoctype: true,\n          removeEmptyAttributes: true,\n          removeStyleLinkTypeAttributes: true,\n          keepClosingSlash: true,\n          minifyJS: {\n            comments: '@cc_on',\n          },\n          minifyCSS: true,\n          minifyURLs: true,\n        },\n        chunks: ['vendors', 'runtime~index', 'index'],\n        filename: 'index.html',\n      });\n      const loginHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        minify: {\n          removeComments: true,\n          collapseWhitespace: true,\n          removeRedundantAttributes: true,\n          useShortDoctype: true,\n          removeEmptyAttributes: true,\n          removeStyleLinkTypeAttributes: true,\n          keepClosingSlash: true,\n          minifyJS: {\n            comments: '@cc_on',\n          },\n          minifyCSS: true,\n          minifyURLs: true,\n        },\n        chunks: ['vendors', 'runtime~login', 'login'],\n        filename: 'login.html',\n      });\n      const adminHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        minify: {\n          removeComments: true,\n          collapseWhitespace: true,\n          removeRedundantAttributes: true,\n          useShortDoctype: true,\n          removeEmptyAttributes: true,\n          removeStyleLinkTypeAttributes: true,\n          keepClosingSlash: true,\n          minifyJS: {\n            comments: '@cc_on',\n          },\n          minifyCSS: true,\n          minifyURLs: true,\n        },\n        chunks: ['vendors', 'runtime~admin', 'admin'],\n        filename: 'admin.html',\n      });\n      const authHtmlPlugin = new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        minify: {\n          removeComments: true,\n          collapseWhitespace: true,\n          removeRedundantAttributes: true,\n          useShortDoctype: true,\n          removeEmptyAttributes: true,\n          removeStyleLinkTypeAttributes: true,\n          keepClosingSlash: true,\n          minifyJS: {\n            comments: '@cc_on',\n          },\n          minifyCSS: true,\n          minifyURLs: true,\n        },\n        chunks: ['vendors', 'runtime~auth', 'auth'],\n        filename: 'auth.html',\n      });\n      config.plugins = replacePlugin(config.plugins, name => /HtmlWebpackPlugin/i.test(name), indexHtmlPlugin);\n      config.plugins.push(loginHtmlPlugin);\n      config.plugins.push(adminHtmlPlugin);\n      config.plugins.push(authHtmlPlugin);\n\n      // 统计分析;\n      // if ('development' !== env) {\n      //   config.plugins.push(new BundleAnalyzerPlugin({ generateStatsFile: true }));\n      // }\n    }\n    return config;\n  },\n  devServer: configFunction => {\n    return (proxy, allowedHost) => {\n      const config = configFunction(proxy, allowedHost);\n      config.historyApiFallback.rewrites = [\n        { from: /^\\/login\\.html/, to: '/build/login.html' },\n        { from: /^\\/admin\\.html/, to: '/build/admin.html' },\n        { from: /^\\/auth\\.html/, to: '/build/auth.html' },\n      ];\n      return config;\n    };\n  },\n};\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}